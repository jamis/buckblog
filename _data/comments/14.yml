---
- date: 2011-01-24
  author: Matthijs van der Vleuten
  content: "<p>You could speed up the hunt phase by remembering the first row with
    unvisited cells. Rows with only visited cells can’t become rows with unvisited
    cells.</p>"
- date: 2011-01-24
  author: Jamis
  content: "<p>@Matthijs, exactly. That’s one of the simple optimizations I hinted
    at. It can speed up the later stages of the algorithm quite a bit.</p>"
- date: 2011-01-24
  author: Pito Salas
  content: "<p>I am loving this series. I think you should make it into a book!</p>"
- date: 2011-01-24
  author: lakshmanan
  content: "<p>cool :)</p>"
- date: 2011-01-24
  author: Jamis
  content: "<p>@Pito, thanks! I’m definitely considering it. :)</p>"
- date: 2011-01-24
  author: Matt Jones
  content: "<p>The comment in the conclusion raises an interesting question: is there
    a metric for defining “twistyness” or whatever you’d call the differences between
    the different maze types? I suspect that a relevant measure might be the maximum
    stack depth required by a recursive backtracker to find the path, but that may
    or may not really capture the obvious qualitative differences.</p>"
- date: 2011-01-24
  author: Jamis
  content: <p>@Matt, “Think Labyrinth” is more-or-less the definitive maze site on
    the Internet (<a href="http://www.astrolog.org/labyrnth/algrithm.htm">http://www.astrolog.org/labyrnth/algrithm.htm</a>),
    and the author there defines a concept called “river” that is used to describe
    whether a maze has longer passages and fewer dead-ends (“more river”) or shorter
    passages and more dead-ends (“less river”). I don’t know of a quantitative measure,
    but some ideas for one might be the ratio of dead-ends to the total number of
    cells in the maze, or maybe computing how many cells have more than 2 passages
    leading out of the (measuring the number of choices to be made in the traversing
    the maze). Interesting question!</p>
- date: 2011-01-24
  author: TechNeilogy
  content: "<p>For some reason, the mazes generated by this algorithm are visually
    challenging.  It seems difficult to look and one and see a “Gestalt” solution.
    \ I think the long, twisty passages entail the visual flow more that algorithms
    with frequent intersections.</p>"
- date: 2011-01-24
  author: Stefano Mazzocchi
  content: "<p>Good memories :-)</p>"
- date: 2011-01-24
  author: Jamis
  content: "<p>Thanks for dropping in, Stefano! Good memories, indeed. :) As far as
    high-school-level “computer science” classes go, it left a lot to be desired,
    but it was fun to figure it out as we went along!</p>"
- date: 2011-01-27
  author: Mike Subelsky
  content: "<p>ahh but your dungeon generator lives on! http://www.myth-weavers.com/generate_dungeon.php
    – very impressive results!</p>"
- date: 2011-01-27
  author: Jamis
  content: <p>@Mike, isn’t that a <span class="caps">PHP</span> reimplementation of
    my generator? Mine was written in C and C++. I imagine the one at myth-weavers
    could just be a <span class="caps">PHP</span> wrapper around my code, though.
    If anyone knows for sure, I’d like to know. :)</p>
